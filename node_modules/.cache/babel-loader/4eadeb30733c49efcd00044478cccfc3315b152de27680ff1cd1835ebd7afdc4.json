{"ast":null,"code":"import { create } from 'zustand';\nimport * as mealServices from './mealServices';\nimport * as pantryServices from './pantryServices';\nimport * as spoonacularAPI from './spoonacularApi';\nconst useMealStore = create((set, get) => ({\n  mealName: '',\n  mealType: '',\n  recipeDetails: {\n    ingredients: [],\n    steps: []\n  },\n  mealList: [],\n  editingMealId: null,\n  editedMeal: {\n    name: '',\n    description: ''\n  },\n  pantryItems: [],\n  recipes: [],\n  isLoading: false,\n  error: null,\n  imageUrl: '',\n  // Meal and Pantry Functions\n  setMealName: name => set({\n    mealName: name\n  }),\n  setMealType: type => set({\n    mealType: type\n  }),\n  setMealList: meals => set({\n    mealList: meals\n  }),\n  setRecipeDetails: details => set({\n    recipeDetails: details\n  }),\n  setImageUrl: url => set({\n    imageUrl: url\n  }),\n  addIngredient: ingredient => set(state => ({\n    recipeDetails: {\n      ...state.recipeDetails,\n      ingredients: [...state.recipeDetails.ingredients, ingredient]\n    }\n  })),\n  addStep: step => set(state => ({\n    recipeDetails: {\n      ...state.recipeDetails,\n      steps: [...state.recipeDetails.steps, step]\n    }\n  })),\n  resetMealCreation: () => set({\n    mealName: '',\n    mealType: '',\n    recipeDetails: {\n      ingredients: [],\n      steps: []\n    }\n  }),\n  // Fetch data functions\n  fetchMealList: () => mealServices.fetchMeals(meals => set({\n    mealList: meals || []\n  })),\n  fetchPantryItems: async () => {\n    set({\n      isLoading: true\n    });\n    try {\n      const items = await pantryServices.fetchPantryItems();\n      set({\n        pantryItems: items,\n        isLoading: false\n      });\n      console.log(\"everything\", items);\n    } catch (error) {\n      set({\n        error: error.message,\n        isLoading: false\n      });\n    }\n  },\n  fetchRecipesBasedOnPantry: async pantryItems => {\n    set({\n      isLoading: true\n    });\n    try {\n      const ingredients = pantryItems.map(item => item.name.trim()).filter(name => name).join(\",\");\n      if (ingredients) {\n        const recipes = await spoonacularAPI.fetchRecipesByIngredients(ingredients);\n        set({\n          recipes: recipes,\n          isLoading: false\n        });\n      } else {\n        console.error(\"No valid ingredients to fetch recipes for.\");\n        set({\n          recipes: [],\n          isLoading: false\n        });\n      }\n    } catch (error) {\n      console.error(\"Error fetching recipes:\", error);\n      set({\n        error: error.message,\n        isLoading: false\n      });\n    }\n  },\n  fetchRecipeDetails: async recipeId => {\n    set({\n      isLoading: true\n    });\n    try {\n      const recipeDetails = await spoonacularAPI.fetchRecipeInstructions(recipeId);\n      set({\n        recipeDetails: recipeDetails,\n        isLoading: false\n      });\n    } catch (error) {\n      console.error(\"Error fetching recipe instructions:\", error);\n      set({\n        error: error.message,\n        isLoading: false\n      });\n    }\n  },\n  selectRecipe: recipe => {\n    set(state => ({\n      selectedRecipe: {\n        ...state.selectedRecipe,\n        ...recipe,\n        ingredients: recipe.ingredients || [],\n        steps: recipe.steps || []\n      }\n    }));\n  },\n  // Meal Editing\n  initiateMealEdit: meal => {\n    const mealToEdit = get().mealList.find(m => m.id === meal.id);\n    mealToEdit ? set({\n      editingMealId: meal.id,\n      editedMeal: {\n        name: mealToEdit.mealName,\n        description: mealToEdit.description\n      }\n    }) : console.error('Meal not found for editing:', meal);\n  },\n  clearMealEdit: () => set({\n    editingMealId: null,\n    editedMeal: {\n      name: '',\n      description: ''\n    }\n  }),\n  commitMealEdit: async mealId => {\n    const meal = get().mealList.find(m => m.id === mealId);\n    if (!meal) {\n      console.error('Meal not found for editing:', mealId);\n      return;\n    }\n    try {\n      await mealServices.updateMeal(meal.dayId, mealId, get().editedMeal);\n      get().fetchMealList();\n      set({\n        editingMealId: null\n      });\n    } catch (error) {\n      console.error(`Error updating meal: ${mealId} under dayId: 'Any`, error);\n    }\n  }\n}));\nexport default useMealStore;","map":{"version":3,"names":["create","mealServices","pantryServices","spoonacularAPI","useMealStore","set","get","mealName","mealType","recipeDetails","ingredients","steps","mealList","editingMealId","editedMeal","name","description","pantryItems","recipes","isLoading","error","imageUrl","setMealName","setMealType","type","setMealList","meals","setRecipeDetails","details","setImageUrl","url","addIngredient","ingredient","state","addStep","step","resetMealCreation","fetchMealList","fetchMeals","fetchPantryItems","items","console","log","message","fetchRecipesBasedOnPantry","map","item","trim","filter","join","fetchRecipesByIngredients","fetchRecipeDetails","recipeId","fetchRecipeInstructions","selectRecipe","recipe","selectedRecipe","initiateMealEdit","meal","mealToEdit","find","m","id","clearMealEdit","commitMealEdit","mealId","updateMeal","dayId"],"sources":["D:/Work/Front End Development/meal-planner-main/src/services/useMealstore.js"],"sourcesContent":["import { create } from 'zustand';\nimport * as mealServices from './mealServices'; \nimport * as pantryServices from './pantryServices'; \nimport * as spoonacularAPI from './spoonacularApi';\n\nconst useMealStore = create((set, get) => ({\n  mealName: '',\n  mealType: '',\n  recipeDetails: { ingredients: [], steps: [] },\n  mealList: [],\n  editingMealId: null,\n  editedMeal: { name: '', description: '' },\n  pantryItems: [],\n  recipes: [],\n  isLoading: false,\n  error: null,\n  imageUrl: '',\n\n  // Meal and Pantry Functions\n  setMealName: name => set({ mealName: name }),\n  setMealType: type => set({ mealType: type }),\n  setMealList: (meals) => set({ mealList: meals }),\n  setRecipeDetails: details => set({ recipeDetails: details }),\n  setImageUrl: url => set({ imageUrl: url }),\n  addIngredient: ingredient => set(state => ({\n    recipeDetails: {\n      ...state.recipeDetails,\n      ingredients: [...state.recipeDetails.ingredients, ingredient],\n    }\n  })),\n  addStep: step => set(state => ({\n    recipeDetails: {\n      ...state.recipeDetails,\n      steps: [...state.recipeDetails.steps, step],\n    }\n  })),\n  resetMealCreation: () => set({ mealName: '', mealType: '', recipeDetails: { ingredients: [], steps: [] } }),\n\n  // Fetch data functions\n  fetchMealList: () => mealServices.fetchMeals(meals => set({ mealList: meals || [] })),\n  fetchPantryItems: async () => {\n    set({ isLoading: true });\n    try {\n      const items = await pantryServices.fetchPantryItems();\n      set({ pantryItems: items, isLoading: false });\n      console.log(\"everything\", items)\n    } catch (error) {\n      set({ error: error.message, isLoading: false });\n    }\n    \n  },\n  fetchRecipesBasedOnPantry: async (pantryItems) => {\n    set({ isLoading: true });\n    try {\n      const ingredients = pantryItems.map(item => item.name.trim()).filter(name => name).join(\",\");\n      \n      if (ingredients) {\n        const recipes = await spoonacularAPI.fetchRecipesByIngredients(ingredients);\n        set({ recipes: recipes, isLoading: false });\n      } else {\n        console.error(\"No valid ingredients to fetch recipes for.\");\n        set({ recipes: [], isLoading: false });\n      }\n    } catch (error) {\n      console.error(\"Error fetching recipes:\", error);\n      set({ error: error.message, isLoading: false });\n    }\n  },\n  fetchRecipeDetails: async (recipeId) => {\n    set({ isLoading: true });\n    try {\n      const recipeDetails = await spoonacularAPI.fetchRecipeInstructions(recipeId);\n      set({ recipeDetails: recipeDetails, isLoading: false });\n    } catch (error) {\n      console.error(\"Error fetching recipe instructions:\", error);\n      set({ error: error.message, isLoading: false });\n    }\n  },\n  selectRecipe: (recipe) => {\n    set((state) => ({\n      selectedRecipe: {\n        ...state.selectedRecipe,\n        ...recipe,\n        ingredients: recipe.ingredients || [],\n        steps: recipe.steps || []\n      }\n    }));\n  },  \n\n  // Meal Editing\n  initiateMealEdit: meal => {\n    const mealToEdit = get().mealList.find(m => m.id === meal.id);\n    mealToEdit ? set({\n      editingMealId: meal.id,\n      editedMeal: { name: mealToEdit.mealName, description: mealToEdit.description },\n    }) : console.error('Meal not found for editing:', meal);\n  },\n  clearMealEdit: () => set({ editingMealId: null, editedMeal: { name: '', description: '' } }),\n  commitMealEdit: async mealId => {\n    const meal = get().mealList.find(m => m.id === mealId);\n    if (!meal) {\n      console.error('Meal not found for editing:', mealId);\n      return;\n    }\n    try {\n      await mealServices.updateMeal(meal.dayId, mealId, get().editedMeal);\n      get().fetchMealList();\n      set({ editingMealId: null });\n    } catch (error) {\n      console.error(`Error updating meal: ${mealId} under dayId: 'Any`, error);\n    }\n  },\n}));\n\nexport default useMealStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}