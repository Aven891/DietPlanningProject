{"ast":null,"code":"import { ref, push, onValue, set, remove } from \"firebase/database\";\nimport { db } from './firebaseConfig';\nexport const fetchPantryItems = callback => {\n  const pantryRef = ref(db, 'pantryItems/');\n  onValue(pantryRef, snapshot => {\n    const data = snapshot.val();\n    const pantryItems = data ? Object.entries(data).map(([key, value]) => ({\n      id: key,\n      ...value\n    })) : [];\n    callback(pantryItems);\n  });\n};\nexport const fetchTopIngredientsRecipes = async (pantryItems, fetchRecipesByIngredients) => {\n  const topIngredients = pantryItems.slice(0, 3).map(item => item.name).join(\",\");\n  return await fetchRecipesByIngredients(topIngredients);\n};\nexport const addPantryItem = (item, callback) => {\n  const pantryRef = ref(db, 'pantryItems/');\n  push(pantryRef, item).then(() => {\n    console.log('Added Pantry Item:', item);\n    callback();\n  }).catch(error => {\n    console.error('Error adding pantry item:', error);\n  });\n};\nexport const updatePantryItem = (itemId, itemData, callback) => {\n  const itemRef = ref(db, `pantryItems/${itemId}`);\n  set(itemRef, itemData).then(() => {\n    console.log('Updated Pantry Item:', itemId, itemData);\n    callback();\n  }).catch(error => {\n    console.error('Error updating pantry item:', error);\n  });\n};\nexport const removePantryItem = (itemId, callback) => {\n  const itemRef = ref(db, `pantryItems/${itemId}`);\n  remove(itemRef).then(() => {\n    console.log('Removed Pantry Item:', itemId);\n    callback();\n  }).catch(error => {\n    console.error('Error removing pantry item:', error);\n  });\n};","map":{"version":3,"names":["ref","push","onValue","set","remove","db","fetchPantryItems","callback","pantryRef","snapshot","data","val","pantryItems","Object","entries","map","key","value","id","fetchTopIngredientsRecipes","fetchRecipesByIngredients","topIngredients","slice","item","name","join","addPantryItem","then","console","log","catch","error","updatePantryItem","itemId","itemData","itemRef","removePantryItem"],"sources":["D:/Work/Front End Development/meal-planner-main/src/services/pantryServices.js"],"sourcesContent":["import { ref, push, onValue, set, remove } from \"firebase/database\";\nimport { db } from './firebaseConfig';\n\nexport const fetchPantryItems = (callback) => {\n    const pantryRef = ref(db, 'pantryItems/');\n    onValue(pantryRef, (snapshot) => {\n      const data = snapshot.val();\n      const pantryItems = data ? Object.entries(data).map(([key, value]) => ({\n        id: key,\n        ...value\n      })) : [];\n      callback(pantryItems);\n      \n    });\n    \n  };\n\n  export const fetchTopIngredientsRecipes = async (pantryItems, fetchRecipesByIngredients) => {\n    const topIngredients = pantryItems.slice(0, 3).map(item => item.name).join(\",\");\n    return await fetchRecipesByIngredients(topIngredients);\n  };\n  \n  export const addPantryItem = (item, callback) => {\n    const pantryRef = ref(db, 'pantryItems/');\n    push(pantryRef, item).then(() => {\n      console.log('Added Pantry Item:', item);  \n      callback();\n    }).catch(error => {\n      console.error('Error adding pantry item:', error);\n    });\n  };\n  \n  export const updatePantryItem = (itemId, itemData, callback) => {\n    const itemRef = ref(db, `pantryItems/${itemId}`);\n    set(itemRef, itemData).then(() => {\n      console.log('Updated Pantry Item:', itemId, itemData); \n      callback();\n    }).catch(error => {\n      console.error('Error updating pantry item:', error);\n    });\n  };\n  \n  export const removePantryItem = (itemId, callback) => {\n    const itemRef = ref(db, `pantryItems/${itemId}`);\n    remove(itemRef).then(() => {\n      console.log('Removed Pantry Item:', itemId);  \n      callback();\n    }).catch(error => {\n      console.error('Error removing pantry item:', error);\n    });\n  };"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,GAAG,EAAEC,MAAM,QAAQ,mBAAmB;AACnE,SAASC,EAAE,QAAQ,kBAAkB;AAErC,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;EAC1C,MAAMC,SAAS,GAAGR,GAAG,CAACK,EAAE,EAAE,cAAc,CAAC;EACzCH,OAAO,CAACM,SAAS,EAAGC,QAAQ,IAAK;IAC/B,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;IAC3B,MAAMC,WAAW,GAAGF,IAAI,GAAGG,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,MAAM;MACrEC,EAAE,EAAEF,GAAG;MACP,GAAGC;IACL,CAAC,CAAC,CAAC,GAAG,EAAE;IACRV,QAAQ,CAACK,WAAW,CAAC;EAEvB,CAAC,CAAC;AAEJ,CAAC;AAED,OAAO,MAAMO,0BAA0B,GAAG,MAAAA,CAAOP,WAAW,EAAEQ,yBAAyB,KAAK;EAC1F,MAAMC,cAAc,GAAGT,WAAW,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACP,GAAG,CAACQ,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAC/E,OAAO,MAAML,yBAAyB,CAACC,cAAc,CAAC;AACxD,CAAC;AAED,OAAO,MAAMK,aAAa,GAAGA,CAACH,IAAI,EAAEhB,QAAQ,KAAK;EAC/C,MAAMC,SAAS,GAAGR,GAAG,CAACK,EAAE,EAAE,cAAc,CAAC;EACzCJ,IAAI,CAACO,SAAS,EAAEe,IAAI,CAAC,CAACI,IAAI,CAAC,MAAM;IAC/BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,IAAI,CAAC;IACvChB,QAAQ,CAAC,CAAC;EACZ,CAAC,CAAC,CAACuB,KAAK,CAACC,KAAK,IAAI;IAChBH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,QAAQ,EAAE3B,QAAQ,KAAK;EAC9D,MAAM4B,OAAO,GAAGnC,GAAG,CAACK,EAAE,EAAG,eAAc4B,MAAO,EAAC,CAAC;EAChD9B,GAAG,CAACgC,OAAO,EAAED,QAAQ,CAAC,CAACP,IAAI,CAAC,MAAM;IAChCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEI,MAAM,EAAEC,QAAQ,CAAC;IACrD3B,QAAQ,CAAC,CAAC;EACZ,CAAC,CAAC,CAACuB,KAAK,CAACC,KAAK,IAAI;IAChBH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,gBAAgB,GAAGA,CAACH,MAAM,EAAE1B,QAAQ,KAAK;EACpD,MAAM4B,OAAO,GAAGnC,GAAG,CAACK,EAAE,EAAG,eAAc4B,MAAO,EAAC,CAAC;EAChD7B,MAAM,CAAC+B,OAAO,CAAC,CAACR,IAAI,CAAC,MAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEI,MAAM,CAAC;IAC3C1B,QAAQ,CAAC,CAAC;EACZ,CAAC,CAAC,CAACuB,KAAK,CAACC,KAAK,IAAI;IAChBH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}