{"ast":null,"code":"//const API_KEY = 'dd96b00c6aa94d3dbb2fc50f9b41b009';\nconst API_KEY = 'bddb74b7f9204c21b4c2c73673a2a058';\n//const API_KEY = '2a957a08d62f426a9df61e1d53227ce5';\n//const API_KEY = 'fake';\n\nexport const fetchRecipesByIngredients = async ingredients => {\n  const url = `https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients}&apiKey=${API_KEY}`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('Failed to fetch recipes');\n    const recipes = await response.json();\n    console.log('Recipes fetched successfully:', recipes);\n    return recipes;\n  } catch (error) {\n    console.error('Error fetching recipes by ingredients:', error);\n    throw error;\n  }\n};\nexport const fetchRecipeInstructions = async recipeId => {\n  const url = `https://api.spoonacular.com/recipes/${recipeId}/analyzedInstructions?apiKey=${API_KEY}`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('Failed to fetch recipe instructions');\n    const instructions = await response.json();\n    // console.log('Recipe instructions fetched successfully:', instructions);\n    return instructions;\n  } catch (error) {\n    console.error('Error fetching recipe instructions:', error);\n    throw error;\n  }\n};\nexport const fetchRandomRecipe = async () => {\n  const url = `https://api.spoonacular.com/recipes/random?apiKey=${API_KEY}`;\n  console.log('Fetching random recipe');\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('No random recipe found');\n    const data = await response.json();\n    console.log('Random recipe fetched successfully:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching random recipe:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_KEY","fetchRecipesByIngredients","ingredients","url","response","fetch","ok","Error","recipes","json","console","log","error","fetchRecipeInstructions","recipeId","instructions","fetchRandomRecipe","data"],"sources":["D:/Work/Front End Development/meal-planner-main/src/services/spoonacularApi.js"],"sourcesContent":["//const API_KEY = 'dd96b00c6aa94d3dbb2fc50f9b41b009';\nconst API_KEY = 'bddb74b7f9204c21b4c2c73673a2a058';\n//const API_KEY = '2a957a08d62f426a9df61e1d53227ce5';\n//const API_KEY = 'fake';\n\nexport const fetchRecipesByIngredients = async (ingredients) => {\n    const url = `https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients}&apiKey=${API_KEY}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Failed to fetch recipes');\n      const recipes = await response.json();\n      console.log('Recipes fetched successfully:', recipes);\n      return recipes;\n    } catch (error) {\n      console.error('Error fetching recipes by ingredients:', error);\n      throw error; \n    }\n  };\n\n  export const fetchRecipeInstructions = async (recipeId) => {\n    const url = `https://api.spoonacular.com/recipes/${recipeId}/analyzedInstructions?apiKey=${API_KEY}`;\n    try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error('Failed to fetch recipe instructions');\n        const instructions = await response.json();\n        // console.log('Recipe instructions fetched successfully:', instructions);\n        return instructions;\n    } catch (error) {\n        console.error('Error fetching recipe instructions:', error);\n        throw error;\n    }\n};\n\nexport const fetchRandomRecipe = async () => {\n  const url = `https://api.spoonacular.com/recipes/random?apiKey=${API_KEY}`;\n  console.log('Fetching random recipe');\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('No random recipe found');\n    const data = await response.json();\n    console.log('Random recipe fetched successfully:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching random recipe:', error);\n    throw error; \n  }\n};\n\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,kCAAkC;AAClD;AACA;;AAEA,OAAO,MAAMC,yBAAyB,GAAG,MAAOC,WAAW,IAAK;EAC5D,MAAMC,GAAG,GAAI,qEAAoED,WAAY,WAAUF,OAAQ,EAAC;EAChH,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5D,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,OAAO,CAAC;IACrD,OAAOA,OAAO;EAChB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAG,MAAOC,QAAQ,IAAK;EACzD,MAAMX,GAAG,GAAI,uCAAsCW,QAAS,gCAA+Bd,OAAQ,EAAC;EACpG,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxE,MAAMQ,YAAY,GAAG,MAAMX,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1C;IACA,OAAOM,YAAY;EACvB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMb,GAAG,GAAI,qDAAoDH,OAAQ,EAAC;EAC1EU,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3D,MAAMU,IAAI,GAAG,MAAMb,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEM,IAAI,CAAC;IACxD,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}